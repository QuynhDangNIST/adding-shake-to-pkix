



LAMPS WG                                                   P. Kampanakis
Internet-Draft                                             Cisco Systems
Intended status: Standards Track                                 Q. Dang
Expires: November 4, 2018                                           NIST
                                                             May 3, 2018


 Internet X.509 Public Key Infrastructure: Additional SHAKE Algorithms
                   and Identifiers for RSA and ECDSA
                     draft-ietf-lamps-pkix-shake-02

Abstract

   This document describes the conventions for using the SHAKE family of
   hash functions in the Internet X.509 as one-way hash functions with
   the RSA Probabilistic Signature Scheme and ECDSA signature
   algorithms; the conventions for the associated subject public keys
   are also described.  Digital signatures are used to sign messages,
   certificates and CRLs (Certificate Revocation Lists).

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 4, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must



Kampanakis & Dang       Expires November 4, 2018                [Page 1]

Internet-Draft         SHAKE identifiers in X.509               May 2018


   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Change Log  . . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Message Digest Algorithms . . . . . . . . . . . . . . . . . .   3
   4.  Signatures  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     4.1.  RSASSA-PSS with SHAKEs  . . . . . . . . . . . . . . . . .   4
     4.2.  ECDSA with SHAKEs . . . . . . . . . . . . . . . . . . . .   5
   5.  Public Keys . . . . . . . . . . . . . . . . . . . . . . . . .   5
   6.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   6
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   6
   8.  Security Considerations . . . . . . . . . . . . . . . . . . .   6
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   7
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .   7
     9.2.  Informative References  . . . . . . . . . . . . . . . . .   8
   Appendix A.  ASN.1 module . . . . . . . . . . . . . . . . . . . .   8
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Change Log

   [ EDNOTE: Remove this section before publication. ]

   o  draft-ietf-lamps-pkix-shake-02:

      *  Added new OID for RSASSA-PSS that hardcodes hash, salt and MFG,
         according the WG consensus.

      *  Updated Public Key section to use the new RSASSA-PSS OIDs and
         clarify the algorithm identifier usage.

      *  Removed the no longer used SHAKE OIDs from section 3.1.

      *  Consolidated subsection for message digest algorithms.

      *  Text fixes.

   o  draft-ietf-lamps-pkix-shake-01:

      *  Changed titles and section names.

      *  Removed DSA after WG discussions.

      *  Updated shake OID names and parameters, added MGF1 section.




Kampanakis & Dang       Expires November 4, 2018                [Page 2]

Internet-Draft         SHAKE identifiers in X.509               May 2018


      *  Updated RSASSA-PSS section.

      *  Added Public key algorithm OIDs.

      *  Populated Introduction and IANA sections.

   o  draft-ietf-lamps-pkix-shake-00:

      *  Initial version

2.  Introduction

   This document describes several cryptographic algorithm identifiers
   for variable length SHAKE algorithms introduced in [SHA3] which may
   be used with the Internet X.509 Certificate and CRL profile
   [RFC5280].

3.  Message Digest Algorithms

   The SHA-3 family of one-way hash functions is specified in [SHA3].
   In the SHA-3 family, two extendable-output functions, called SHAKE128
   and SHAKE256 are defined.  Four hash functions, SHA3-224, SHA3-256,
   SHA3-384, and SHA3-512 are also defined but are out of scope for this
   document.  A SHAKE is a variable length hash function.  The output
   lengths, in bits, of the SHAKE hash functions are defined by the
   parameter d.  The corresponding collision and preimage resistance
   security levels for SHAKE128 and SHAKE256 are respectively
   min(d/2,128) and min(d,128) and min(d/2,256) and min(d,256).

   The SHAKEs can be used as the hash algorithm in the RSASSA-PSS or
   ECDSA signature schemes.  The RSASSA-PSS signature algorithm also
   uses a mask generation function.  A mask generation function takes an
   octet string of variable length and a desired output length as input,
   and outputs an octet string of the desired length.  To use a SHAKE as
   the mask generation function in RSASSA-PSS, this document defines it
   as part of the RSASSA-PSS identifier (Section 4.1).

4.  Signatures

   The OIDs (Object Identifiers) for signatures contained in
   certificates based on SHAKEs are defined in this section.

   Conforming CA implementations MUST specify the hash algorithm
   explicitly by using the OIDs specified below when encoding RSASSA-PSS
   or ECDSA with SHAKE signatures in certificates and CRLs.






Kampanakis & Dang       Expires November 4, 2018                [Page 3]

Internet-Draft         SHAKE identifiers in X.509               May 2018


   Conforming client implementations that process ECDSA with SHAKE
   signatures when processing certificates and CRLs MUST recognize the
   corresponding OIDs specified below.

   Encoding rules for RSASSA-PSS and ECDSA with SHAKE signature values
   are specified in [RFC4055] and [RFC5480] respectively.

   Conforming CA implementations that generate ECDSA with SHAKE
   signatures in certificates or CRLs MUST generate such signatures in
   accordance with all the requirements specified in Sections 7.2 and
   7.3 of [X9.62] or with all the requirements specified in
   Section 4.1.3 of [SEC1].  They MAY also generate such signatures in
   accordance with all the recommendations in [X9.62] or [SEC1] if they
   have a stated policy that requires conformance to these standards.
   These standards may have not specified SHAKE128 and SHAKE256 as hash
   algorithm options.  However, SHAKE128 and SHAKE256 with output length
   being 32 and 64 octets respectively are subtitutions for 256 and
   512-bit output hash algorithms such as SHA256 and SHA512 used in the
   standards.

4.1.  RSASSA-PSS with SHAKEs

   RSASSA-PSS algorithm identifiers and their parameters are specifed in
   [RFC4055].  This document adds two new algorithm choices.  The new
   signature algorithm identifiers are

     id-RSASSA-PSS-SHAKE128  OBJECT IDENTIFIER  ::=  { pkcs-1 w }

     id-RSASSA-PSS-SHAKE256  OBJECT IDENTIFIER  ::=  { pkcs-1 z }

     [ EDNOTE: "w" and "z" will be specified by NIST later. ]

   The parameters for these identifiers MUST be absent.  That is, the
   AlgorithmIdentifier SHALL be a SEQUENCE of one component, the OID id-
   RSASSA-PSS-SHAKE128 or id-RSASSA-PSS-SHAKE256.

   In the identifiers above, SHAKE128 and SHAKE256 are respectively used
   as the hashAlgorithm and the maskGenAlgorithm.  The output-lengths of
   the hashAlgorithm are 32 and 64 bytes respectively.  The respective
   output length for the mask generation algorithm is (n - 264)/8 or (n
   - 520)/8 respectively, where n is the RSA modulus in bits.  For
   example, when RSA modulus n is 2048, the mask generation algorithm
   length will be 223 or 191.  The saltLength is 32 or 64 bytes
   respectively for the SHAKE128 and SHA256 OIDs.  Finally, the
   trailerField SHALL be 1, which represents the trailer field with
   hexadecimal value 0xBC [RFC4055].





Kampanakis & Dang       Expires November 4, 2018                [Page 4]

Internet-Draft         SHAKE identifiers in X.509               May 2018


4.2.  ECDSA with SHAKEs

   The Elliptic Curve Digital Signature Algorithm (ECDSA) is defined in
   [X9.62].  The algorithm identifiers of ECDSA signature algorithms
   using SHAKE128 and SHAKE256, are



  id-ecdsa-with-shake128 OBJECT IDENTIFIER  ::=  { joint-iso-ccitt(2)
                        country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
                        id-ecdsa-with-shake(3) x }



  id-ecdsa-with-shake256 OBJECT IDENTIFIER  ::=  { joint-iso-ccitt(2)
                        country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
                        id-ecdsa-with-shake(3) y }

  [ EDNOTE: "x" and "y" will be specified by NIST later. ]

   When the id-ecdsa-with-SHAKE128 or id-ecdsa-with-SHAKE256, algorithm
   identifier appears in the algorithm field as an AlgorithmIdentifier,
   the encoding MUST omit the parameters field.  That is, the
   AlgorithmIdentifier SHALL be a SEQUENCE of one component, the OID
   ecdsa-with-SHAKE128 or ecdsa-with-SHAKE256.

5.  Public Keys

   The conventions for RSASSA-PSS and ECDSA public keys are as specified
   in [RFC3279], [RFC4055] and [RFC5480].

   [RFC3279] defines the following OID for RSA AlgorithmIdentifier in
   the SubjectPublicKeyInfo with NULL parameters.

     rsaEncryption OBJECT IDENTIFIER ::=  { pkcs-1 1}

   This document adds the corresponding RSASSA-PSS identifiers (defined
   in Section 4.1).  When used as the public key AlgorithmIdentifier in
   the SubjectPublicKeyInfo, the parameters MUST be absent.  That is,
   public key identifier SHALL be a SEQUENCE of one component, the OID
   id-RSASSA-PSS-SHAKE128 or id-RSASSA-PSS-SHAKE256.  The details of the
   algorithms, salt length and trailer are defined in Section 4.1.

   Regardless of what RSA algorithm identifier is used, the RSA public
   key, which is composed of a modulus and a public exponent, MUST be
   encoded using the RSAPublicKey type [RFC4055].  The output of this
   encoding is carried in the certificate subjectPublicKey.




Kampanakis & Dang       Expires November 4, 2018                [Page 5]

Internet-Draft         SHAKE identifiers in X.509               May 2018


     RSAPublicKey ::= SEQUENCE {
           modulus INTEGER, -- n
           publicExponent INTEGER  -- e
     }

   When id-ecdsa-with-shake128 or id-ecdsa-with-shake256 (Section 4.2)
   are used as the AlgorithmIdentifier in the SubjectPublicKeyInfo, the
   parameters MUST be omitted.  That is, the AlgorithmIdentifier SHALL
   be a SEQUENCE of one component, the OID ecdsa-with-SHAKE128 or ecdsa-
   with-SHAKE256.  Additionally, for ECDSA, [RFC5480] defines the
   mandatory EC public key SubjectPublicKey in Section 2.1.1 and its
   syntax in Section 2.2.  We include it here for convenience:

     id-ecPublicKey OBJECT IDENTIFIER ::= {
          iso(1) member-body(2) us(840) ansi-X9-62(10045) keyType(2) 1 }

   The id-ecPublicKey parameters MUST be present and are defined as

     ECParameters ::= CHOICE {
         namedCurve         OBJECT IDENTIFIER
         -- implicitCurve   NULL
         -- specifiedCurve  SpecifiedECDomain
      }

   The ECParameters associated with the ECDSA public key in the signer's
   certificate SHALL apply to the verification of the signature.

6.  Acknowledgements

   We would like to thank Sean Turner for his valuable contributions to
   this document.

7.  IANA Considerations

   This document uses several new registries [ EDNOTE: Update here. ]

8.  Security Considerations

   The SHAKEs are deterministic functions.  Like any other deterministic
   functions, executing each function with the same input multiple times
   will produce the same output.  Therefore, users should not expect
   unrelated outputs (with the same or different output lengths) from
   excuting a SHAKE function with the same input multiple times.

   Implementations must protect the signer's private key.  Compromise of
   the signer's private key permits masquerade.





Kampanakis & Dang       Expires November 4, 2018                [Page 6]

Internet-Draft         SHAKE identifiers in X.509               May 2018


   When more than two parties share the same message-authentication key,
   data origin authentication is not provided.  Any party that knows the
   message-authentication key can compute a valid MAC, therefore the
   content could originate from any one of the parties.

   Implementations must randomly generate message-authentication keys
   and one-time values, such as the k value when generating a ECDSA
   signature.  In addition, the generation of public/private key pairs
   relies on random numbers.  The use of inadequate pseudo-random number
   generators (PRNGs) to generate such cryptographic values can result
   in little or no security.  The generation of quality random numbers
   is difficult.  [RFC4086] offers important guidance in this area, and
   [SP800-90A] series provide acceptable PRNGs.

   Implementers should be aware that cryptographic algorithms may become
   weaker with time.  As new cryptanalysis techniques are developed and
   computing performance improves, the work factor to break a particular
   cryptographic algorithm will decrease.  Therefore, cryptographic
   algorithm implementations should be modular allowing new algorithms
   to be readily inserted.  That is, implementers should be prepared to
   regularly update the set of algorithms in their implementations.

9.  References

9.1.  Normative References

   [RFC3279]  Bassham, L., Polk, W., and R. Housley, "Algorithms and
              Identifiers for the Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 3279, DOI 10.17487/RFC3279, April
              2002, <https://www.rfc-editor.org/info/rfc3279>.

   [RFC4055]  Schaad, J., Kaliski, B., and R. Housley, "Additional
              Algorithms and Identifiers for RSA Cryptography for use in
              the Internet X.509 Public Key Infrastructure Certificate
              and Certificate Revocation List (CRL) Profile", RFC 4055,
              DOI 10.17487/RFC4055, June 2005,
              <https://www.rfc-editor.org/info/rfc4055>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/info/rfc5280>.







Kampanakis & Dang       Expires November 4, 2018                [Page 7]

Internet-Draft         SHAKE identifiers in X.509               May 2018


   [RFC5480]  Turner, S., Brown, D., Yiu, K., Housley, R., and T. Polk,
              "Elliptic Curve Cryptography Subject Public Key
              Information", RFC 5480, DOI 10.17487/RFC5480, March 2009,
              <https://www.rfc-editor.org/info/rfc5480>.

   [SHA3]     National Institute of Standards and Technology, "SHA-3
              Standard - Permutation-Based Hash and Extendable-Output
              Functions FIPS PUB 202", August 2015,
              <https://www.nist.gov/publications/sha-3-standard-
              permutation-based-hash-and-extendable-output-functions>.

9.2.  Informative References

   [RFC4086]  Eastlake 3rd, D., Schiller, J., and S. Crocker,
              "Randomness Requirements for Security", BCP 106, RFC 4086,
              DOI 10.17487/RFC4086, June 2005,
              <https://www.rfc-editor.org/info/rfc4086>.

   [SEC1]     Standards for Efficient Cryptography Group, "SEC 1:
              Elliptic Curve Cryptography", May 2009,
              <http://www.secg.org/sec1-v2.pdf>.

   [SP800-90A]
              National Institute of Standards and Technology,
              "Recommendation for Random Number Generation Using
              Deterministic Random Bit Generators. NIST SP 800-90A",
              June 2015,
              <http://nvlpubs.nist.gov/nistpubs/SpecialPublications/
              NIST.SP.800-90Ar1.pdf>.

   [X9.62]    American National Standard for Financial Services (ANSI),
              "X9.62-2005 Public Key Cryptography for the Financial
              Services Industry: The Elliptic Curve Digital Signature
              Standard (ECDSA)", November 2005.

Appendix A.  ASN.1 module

   [ EDNOTE: More here. ]

Authors' Addresses

   Panos Kampanakis
   Cisco Systems

   Email: pkampana@cisco.com






Kampanakis & Dang       Expires November 4, 2018                [Page 8]

Internet-Draft         SHAKE identifiers in X.509               May 2018


   Quynh Dang
   NIST
   100 Bureau Drive, Stop 8930
   Gaithersburg, MD  20899-8930
   USA

   Email: quynh.dang@nist.gov












































Kampanakis & Dang       Expires November 4, 2018                [Page 9]